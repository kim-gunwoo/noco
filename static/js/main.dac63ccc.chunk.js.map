{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Twit.js","components/TwitFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["storageService","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","getStorage","db","getFirestore","auth","getAuth","Auth","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","AuthForm","faGoogle","faGithub","Twit","item","isOwner","editing","setEditing","text","newTwit","setNewTwit","onDeleteClick","window","confirm","deleteDoc","doc","id","attachmentUrl","deleteObject","ref","toggleEditing","updateDoc","src","faTrash","faPencilAlt","TwitFactory","userObj","setText","attachment","setAttachment","fileRef","uid","uuidv4","uploadString","uploadFile","getDownloadURL","addDoc","collection","createdAt","Date","now","creatorId","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","texts","setTexts","useEffect","unsubscribe","onSnapshot","query","orderBy","snapshot","newArray","docs","map","data","marginTop","Profile","refreshUser","navigate","useNavigate","displayName","newDisplayName","setNewDisplayName","updateProfile","getMyProfile","q","where","getDocs","forEach","autoFocus","signOut","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","path","element","App","init","setInit","setUserObj","onAuthStateChanged","user","console","log","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dac63ccc.chunk.js","sourcesContent":["// import firebase from \"firebase/app\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getStorage } from \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nconst app = initializeApp(firebaseConfig);\nexport const storageService = getStorage();\n\nexport const db = getFirestore();\nexport const auth = getAuth();\n\n// export default app;\n// firebase.initializeApp(firebaseConfig);\n// export const authService = firebase.auth();\n// firebase.initializeApp(firebaseConfig);\n// export const authService = firebase.auth();\n","import React, { useState } from \"react\";\nimport { auth } from \"fbase\";\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\n\nconst inputStyles = {};\n\nconst Auth = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await createUserWithEmailAndPassword(auth, email, password);\n      } else {\n        data = await signInWithEmailAndPassword(auth, email, password);\n      }\n      // console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n\n  return (\n    <>\n      <form className=\"container\" onSubmit={onSubmit}>\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          className=\"authInput\"\n          required\n          value={email}\n          onChange={onChange}\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          className=\"authInput\"\n          required\n          value={password}\n          onChange={onChange}\n        />\n        <input\n          type=\"submit\"\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span className=\"authSwitch\" onClick={toggleAccount}>\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\nexport default Auth;\n","import React from \"react\";\nimport { auth } from \"fbase\";\nimport {\n  signInWithPopup,\n  GoogleAuthProvider,\n  GithubAuthProvider,\n} from \"firebase/auth\";\nimport AuthForm from \"components/AuthForm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new GithubAuthProvider();\n    }\n    await signInWithPopup(auth, provider);\n  };\n\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;\n","import React, { useState } from \"react\";\nimport { storageService } from \"../fbase\";\nimport { deleteObject, ref } from \"@firebase/storage\";\nimport { deleteDoc, getFirestore, doc, updateDoc } from \"firebase/firestore\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Twit = ({ item, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newTwit, setNewTwit] = useState(item.text);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"삭제 하시겠습니까?\");\n    if (ok) {\n      await deleteDoc(doc(getFirestore(), \"twit\", item.id));\n      if (item.attachmentUrl) {\n        await deleteObject(ref(storageService, item.attachmentUrl));\n      }\n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    // await updateDoc(doc(getFirestore(), `twit/${item.id}`), {\n    await updateDoc(doc(getFirestore(), \"twit\", item.id), {\n      text: newTwit,\n    });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewTwit(value);\n  };\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          <form className=\"container nweetEdit\" onSubmit={onSubmit}>\n            <input\n              type=\"text\"\n              placeholder=\"Edit your Twit\"\n              value={newTwit}\n              required\n              onChange={onChange}\n            />\n            <input className=\"formBtn\" type=\"submit\" value=\"Update Twit\" />\n          </form>\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          <h4>{item.text}</h4>\n          {item.attachmentUrl && <img src={item.attachmentUrl} />}\n          {isOwner && (\n            <div className=\"nweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Twit;\n","import React, { useState, useEffect } from \"react\";\nimport { db, storageService } from \"fbase\";\nimport { doc, setDoc } from \"firebase/firestore\";\nimport { ref, uploadString, getDownloadURL } from \"@firebase/storage\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport {\n  addDoc,\n  collection,\n  getDocs,\n  query,\n  onSnapshot,\n  orderBy,\n} from \"firebase/firestore\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst TwitFactory = ({ userObj }) => {\n  const [text, setText] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (text === \"\") {\n      return;\n    }\n\n    let attachmentUrl = \"\";\n\n    if (attachment !== \"\") {\n      const fileRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\n      const uploadFile = await uploadString(fileRef, attachment, \"data_url\");\n      attachmentUrl = await getDownloadURL(uploadFile.ref);\n    }\n\n    await addDoc(collection(db, \"twit\"), {\n      text,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    });\n\n    // await setDoc(doc(db, \"twit\", \"LA\"), {\n    //   name: \"Los Angeles\",\n    //   state: \"CA\",\n    //   country: \"USA\",\n    // });\n    setText(\"\");\n    setAttachment(\"\");\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setText(value);\n  };\n\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearAttachment = () => setAttachment(\"\");\n\n  return (\n    <form className=\"factoryForm\" onSubmit={onSubmit}>\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n          onChange={onChange}\n          value={text}\n        />\n        <input className=\"factoryInput__arrow\" type=\"submit\" value=\"&rarr;\" />\n      </div>\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\nexport default TwitFactory;\n","import React, { useState, useEffect } from \"react\";\nimport { db, storageService } from \"fbase\";\nimport { doc, setDoc } from \"firebase/firestore\";\nimport { ref, uploadString, getDownloadURL } from \"@firebase/storage\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport {\n  addDoc,\n  collection,\n  getDocs,\n  query,\n  onSnapshot,\n  orderBy,\n} from \"firebase/firestore\";\nimport Twit from \"components/Twit\";\nimport TwitFactory from \"components/TwitFactory\";\n\nconst Home = ({ userObj }) => {\n  const [texts, setTexts] = useState([]);\n\n  useEffect(() => {\n    const unsubscribe = onSnapshot(\n      query(collection(db, \"twit\"), orderBy(\"createdAt\", \"desc\")),\n      (snapshot) => {\n        const newArray = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setTexts(newArray);\n      }\n    );\n    return () => unsubscribe();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <TwitFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {texts.map((item) => (\n          <Twit\n            key={item.id}\n            item={item}\n            isOwner={item.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import React, { useState, useEffect } from \"react\";\nimport { auth, db } from \"fbase\";\nimport { useNavigate } from \"react-router-dom\";\nimport { updateProfile } from \"@firebase/auth\";\nimport { collection, getDocs, query, where } from \"@firebase/firestore\";\n\nconst Profile = ({ userObj, refreshUser }) => {\n  const navigate = useNavigate();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    auth.signOut();\n    navigate(\"/\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await updateProfile(userObj, { displayName: newDisplayName });\n      refreshUser();\n    }\n  };\n  const getMyProfile = async () => {\n    const q = query(\n      collection(db, \"twit\"),\n      where(\"creatorId\", \"==\", userObj.uid)\n    );\n    const querySnapshot = await getDocs(q);\n    querySnapshot.forEach((doc) => {\n      // console.log(doc.id, \" => \", doc.data());\n    });\n  };\n  useEffect(() => {\n    getMyProfile();\n  }, []);\n  return (\n    <div className=\"container\">\n      <form className=\"profileForm\" onSubmit={onSubmit}>\n        <input\n          className=\"formInput\"\n          type=\"text\"\n          autoFocus\n          placeholder=\"Display name\"\n          value={newDisplayName}\n          onChange={onChange}\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}의 Profile`\n              : \"Profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\nexport default Navigation;\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Route,\n  Routes,\n  Redirect,\n} from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <div\n        style={{\n          maxWidth: 890,\n          width: \"100%\",\n          margin: \"0 auto\",\n          marginTop: 80,\n          display: \"flex\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Routes>\n          {isLoggedIn ? (\n            <>\n              <Route path=\"/\" element={<Home userObj={userObj} />} />\n              <Route\n                path=\"/profile\"\n                element={\n                  <Profile userObj={userObj} refreshUser={refreshUser} />\n                }\n              />\n            </>\n          ) : (\n            <Route path=\"/\" element={<Auth />} />\n          )}\n        </Routes>\n      </div>\n    </Router>\n  );\n};\nexport default AppRouter;\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { auth } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj(user);\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  useEffect(() => {\n    console.log(auth);\n  }, [auth]);\n  const refreshUser = async () => {\n    const user = auth.currentUser;\n    setUserObj({});\n    setUserObj(user);\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n          refreshUser={refreshUser}\n        />\n      ) : (\n        \"Init...\"\n      )}\n      {/* <footer>&copy; {new Date().getFullYear()} twit-fire</footer> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}